/*
 * Renjin : JVM-based interpreter for the R language for the statistical analysis
 * Copyright Â© 2010-${$file.lastModified.year} BeDataDriven Groep B.V. and contributors
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, a copy is available at
 *  https://www.gnu.org/licenses/gpl-2.0.txt
 *
 */

apply from: "../gradle/maven.gradle"

dependencies {

    compile project(':math:appl')
    compile project(':math:nmath')
    compile project(':math:blas')
    compile project(':math:lapack')

    compile project(':tools:gcc-bridge:runtime')

    compile 'org.apache.commons:commons-math:2.2'
    compile 'com.github.fommil.netlib:core:1.1.2'
    compile 'org.apache.commons:commons-vfs2:2.0'
    compile 'org.apache.commons:commons-compress:1.21'
    compile 'org.tukaani:xz:1.9'

    compile libraries.asm
    compile libraries.guava

    compile 'com.sun.codemodel:codemodel:2.6'
}

def wrapperOutputDir = "$buildDir/wrappers"
def baseOutputDir = "$buildDir/base"
def versionOutputDir = "$buildDir/version"

sourceSets {
    main {
        output.dir wrapperOutputDir, builtBy: 'generateWrappers'
        output.dir baseOutputDir, builtBy: 'compileBasePackage'
        output.dir versionOutputDir, builtBy: 'writeVersionData'
    }
}

task generateWrappers(type: JavaExec) {
    dependsOn 'writeVersionData'

    inputs.dir tasks.getByName('compileJava').destinationDir
    outputs.dir wrapperOutputDir

    dependsOn 'compileJava'
    classpath configurations.compile
    classpath tasks.getByName('compileJava').destinationDir

    main = 'org.renjin.invoke.codegen.WrapperGenerator2'
    args wrapperOutputDir

    doFirst {
        delete wrapperOutputDir
        delete "$build/wrappers-sources"
    }
}


task compileBasePackage(type: JavaExec) {
    dependsOn 'generateWrappers'
    dependsOn 'writeVersionData'

    inputs.dir tasks.getByName('compileJava').destinationDir
    inputs.dir 'src/main/R'
    outputs.dir baseOutputDir

    classpath sourceSets.main.compileClasspath
    classpath sourceSets.main.resources.srcDirs
    classpath tasks.getByName('compileJava').destinationDir
    classpath wrapperOutputDir
    classpath versionOutputDir

    main = 'org.renjin.base.BasePackageCompiler'
    args baseOutputDir
    
    doFirst {
        delete baseOutputDir
        mkdir baseOutputDir
    }
}

task writeVersionData {
    doFirst {
        def versionDir = new File(versionOutputDir, "org/renjin");
        versionDir.mkdirs();

        def versionFile = new File(versionDir, "Renjin.version.properties");
        versionFile.text = "renjin.display.version=${project.version}\n"
    }
}

sourcesJar {
    from('src/main/R/base') {
        into 'org/renjin/base'
    }
    from('src/main/R/renjinBase.R') {
        into 'org/renjin/base'
    }
}